#include "DHT.h"
//#include <SoftwareSerial.h>

#define DHTPIN 21      // Digital pin connected to the DHT sensor
#define DHTTYPE DHT11   // DHT 11
#define SOILPIN 19
#define LEDPIN 11
#define INTLEDPIN 1
#define REDLEDPIN 3
#define YELLEDPIN 5

class Soil{
  public:
  Soil(int pin){
    _pin = pin;
  }
  int readMoisture(){
    return analogRead(_pin);
  }
  private:
  int _pin;
};

class DLed {
  public:
  DLed(int pin){
      _pin = pin;
      pinMode(_pin, OUTPUT);
  }
  void On(){
    digitalWrite(_pin, HIGH);
  }
  void Off(){
    digitalWrite(_pin, LOW);
  }
  private:
  int _pin;
};

DHT dht(DHTPIN, DHTTYPE);
Soil soil(SOILPIN);

// Teensy 5V <--> HC-05 Vcc
// Teensy Ground <--> HC-05 GND
#define rxPin 7 // Teensy pin 7 <--> HC-05 Tx
#define txPin 8 // Teensy pin 8 <--> HC-05 Rx
//SoftwareSerial BTSerial =  SoftwareSerial(rxPin, txPin);

DLed intled(INTLEDPIN);
DLed redled(REDLEDPIN);
DLed yelled(YELLEDPIN);

void setup() {
  // Setup serial for monitor
  Serial.begin(9600);

  // Setup DHT Sensor
  pinMode(DHTPIN, INPUT);
  dht.begin();
  // Setup Serial1 for BlueTooth
  Serial1.begin(9600); // Default communication rate of the Bluetooth module
}

void loop() {
//  if(Serial1.available() > 0){ // Checks whether data is comming from the serial port
    digitalWrite(LEDPIN, HIGH);
    float h = dht.readHumidity();
    float t = dht.readTemperature();
    int s = soil.readMoisture();
    int l = analogRead(14);

    Serial.print(F(" Humidity: "));
    Serial.print(h);
    Serial.print(F(",  Temperature: "));
    Serial.print(t);
    Serial.print(F(","));
    Serial.print(F(" Moisture: "));
    Serial.print(s);
    Serial.print(F(","));
    Serial.print(F(" Light: "));
    Serial.println(l);


    Serial1.print(F(" Humidity: "));
    Serial1.print(h);
    Serial1.print(F(",  Temperature: "));
    Serial1.print(t);
    Serial1.print(F(","));
    Serial1.print(F(" Moisture: "));
    Serial1.print(s);
    Serial1.print(F(","));
    Serial1.print(F(" Light: "));
    Serial1.println(l);

    digitalWrite(LEDPIN, LOW);
    delay(3000);

    if(Serial1.available() > 0){
    String str = Serial1.readStringUntil('\n');
    Serial1.println(str);
    if(str == "GREEN_ON"){
      intled.On();
      Serial1.println("GREEN ON");
    } else if(str == "GREEN_OFF"){
      intled.Off();
      Serial1.println("GREEN OFF");
    } else if(str == "RED_ON"){
      redled.On();
      Serial1.println("RED ON");
    } else if(str == "RED_OFF"){
      redled.Off();
      Serial1.println("RED OFF");
    } else if(str == "YELLOW_ON"){
      yelled.On();
      Serial1.println("YELLOW ON");
    } else if(str == "YELLOW_OFF"){
      yelled.Off();
      Serial1.println("YELLOW OFF");
    }
  }
}
